# Generated by Django 4.2.3 on 2025-04-02 14:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=150)),
                ('phone', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('role', models.CharField(choices=[('ADMIN', 'admin'), ('CLIENT', 'client'), ('SELLER', 'seller')], default='client', max_length=10)),
                ('can_publish', models.BooleanField(default=False)),
                ('num_reviews', models.IntegerField(default=0)),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('accepted_politicy', models.BooleanField(default=True, null=True)),
                ('avatar', models.TextField(default='img in base 64', help_text='Imagen del avatar en formato base64')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['-date_joined'],
            },
            managers=[
                ('objects', users.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='EnterprisePost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('images', models.TextField(blank=True, help_text='Imágenes en formato base64 separadas por comas', null=True)),
                ('rating', models.DecimalField(decimal_places=2, default=0, help_text='Calificación de 0 a 5', max_digits=3)),
                ('redirect_link', models.URLField(blank=True, help_text='Link al que redirige el post', max_length=255, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enterprise_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Enterprise',
            fields=[
                ('owner_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='enterprise_owner', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, default=None, max_length=20, null=True)),
                ('rut', models.TextField(default='img in base 64', help_text='Imagen del RUT en formato base64')),
                ('tipo_productos', models.CharField(default='Varios', help_text='Lista de tipos de productos separados por comas', max_length=255)),
                ('facebook', models.CharField(blank=True, max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, max_length=255, null=True)),
                ('whatsapp', models.CharField(blank=True, max_length=20, null=True)),
                ('link_enterprise', models.CharField(blank=True, max_length=255, null=True)),
                ('date_registered', models.DateTimeField(default=django.utils.timezone.now)),
                ('address', models.CharField(max_length=255)),
                ('products_length', models.CharField(default=0, max_length=255)),
                ('description', models.CharField(default='Description in blank', max_length=255)),
                ('avatar', models.TextField(default='img in base 64', help_text='Imagen del avatar en formato base64')),
                ('is_active', models.BooleanField(default=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PayPalConfig',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('app_name', models.CharField(max_length=255)),
                ('client_id', models.CharField(max_length=255)),
                ('secret_key', models.CharField(max_length=255)),
                ('date_configured', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('date_requested', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Reviews_User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('comment', models.TextField(blank=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user_target', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_reviews', to=settings.AUTH_USER_MODEL)),
                ('user_wrote', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='written_reviews', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('rating', models.DecimalField(blank=True, decimal_places=2, help_text='Calificación de 0 a 5', max_digits=3, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='users.enterprisepost')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_comments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MercadoPagoConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=255)),
                ('public_key', models.CharField(max_length=255)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='enterprisepost',
            name='enterprise',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='users.enterprise'),
        ),
        migrations.AddField(
            model_name='user',
            name='enterprise',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_enterprise', to='users.enterprise'),
        ),
    ]
